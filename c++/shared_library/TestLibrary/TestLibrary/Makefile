#############################################################################
# Makefile for building: libTestLibrary.so.1.0.0
# Generated by qmake (2.01a) (Qt 4.7.4) on: Sat Nov 19 15:02:37 2011
# Project:  TestLibrary.pro
# Template: lib
# Command: /home/mehoggan/QtSDK/Desktop/Qt/474/gcc/bin/qmake -spec ../../../QtSDK/Desktop/Qt/474/gcc/mkspecs/linux-g++-32 -o Makefile TestLibrary.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DTESTLIBRARY_LIBRARY
CFLAGS        = -m32 -pipe -O2 -Wall -W -D_REENTRANT -fPIC
CXXFLAGS      = -m32 -pipe -O2 -Wall -W -D_REENTRANT -fPIC
INCPATH       = -I.
LINK          = g++
LFLAGS        = -m32 -Wl,-O1 -shared
LIBS          = -lpthread 
AR            = ar cqs
RANLIB        = 
QMAKE         = /home/mehoggan/QtSDK/Desktop/Qt/474/gcc/bin/qmake
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
STRIP         = strip
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = testlibrary.cpp 
OBJECTS       = testlibrary.o
DESTDIR       = 
TARGET        = libTestLibrary.so.1.0.0
TARGETA       = libTestLibrary.a
TARGETD       = libTestLibrary.so.1.0.0
TARGET0       = libTestLibrary.so
TARGET1       = libTestLibrary.so.1
TARGET2       = libTestLibrary.so.1.0

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: $(TARGET)

$(TARGET):  $(OBJECTS)
	-$(DEL_FILE) $(TARGET) $(TARGET0) $(TARGET1) $(TARGET2)
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(LIBS) 
	-ln -s $(TARGET) $(TARGET0)
	-ln -s $(TARGET) $(TARGET1)
	-ln -s $(TARGET) $(TARGET2)

staticlib: $(TARGETA)

$(TARGETA):  $(OBJECTS)  
	-$(DEL_FILE) $(TARGETA) 
	$(AR) $(TARGETA) $(OBJECTS)

####### Compile

testlibrary.o: testlibrary.cpp testlibrary.h \
		TestLibrary_global.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o testlibrary.o testlibrary.cpp

####### Clean

clean: 
	$(DEL_FILE) -f "*.o" $(TARGET) $(TARGET0) $(TARGET1) $(TARGET2) $(TARGETA) $(TARGETD)

####### Install

install_target: first FORCE
	@$(CHK_DIR_EXISTS) $(INSTALL_ROOT)/usr/lib/ || $(MKDIR) $(INSTALL_ROOT)/usr/lib/ 
	-$(INSTALL_PROGRAM) "$(TARGET)" "$(INSTALL_ROOT)/usr/lib/$(TARGET)"
	-$(STRIP) --strip-unneeded "$(INSTALL_ROOT)/usr/lib/$(TARGET)"
	-$(SYMLINK) "$(TARGET)" "$(INSTALL_ROOT)/usr/lib/$(TARGET0)"
	-$(SYMLINK) "$(TARGET)" "$(INSTALL_ROOT)/usr/lib/$(TARGET1)"
	-$(SYMLINK) "$(TARGET)" "$(INSTALL_ROOT)/usr/lib/$(TARGET2)"

uninstall_target:  FORCE
	-$(DEL_FILE) "$(INSTALL_ROOT)/usr/lib/$(TARGET)" 
	-$(DEL_FILE) "$(INSTALL_ROOT)/usr/lib/$(TARGET0)" 
	-$(DEL_FILE) "$(INSTALL_ROOT)/usr/lib/$(TARGET1)" 
	-$(DEL_FILE) "$(INSTALL_ROOT)/usr/lib/$(TARGET2)"
	-$(DEL_DIR) $(INSTALL_ROOT)/usr/lib/ 


install:  install_target FORCE

uninstall: uninstall_target FORCE
